#!/bin/bash

####################################################################################################
#### author: SimpleStack ###########################################################################
#### link: https://localhostdomain #################################################################
#### mirror: https://simplestack.git.supercluster.io/ss-purge.txt ##################################
#### path: /var/www/ss-purge #######################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Clears all caches i.e. FastCGI (Nginx), PHP OPcache, Redis, and WP transients ########
#### module version: Ubuntu 20.04 LTS + MySQL 8.0.x + PHP-FPM 7.4.x + Redis 5.0.x ##################
####################################################################################################

## RUNNING SS-PURGE DURING TRAFFIC SPIKES MIGHT CAUSE SUDDEN STRESS TO SERVER RESOURCES ##
## KEEP IN MIND THAT FASTCGI CACHE IS DISABLED ALREADY ON STAGING SUBDIRECTORIES ##

## include SimpleStack configuration ##
source /var/www/ss-config

####################################################################################################
#### SimpleStack: Critical Bash Functions (Aliases) For This Script To Work #########################
####################################################################################################

## apt alias flags ##
function apt {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/apt -q -y -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-confdef "$@"
}

## add-apt-repository alias flags ##
function add-apt-repository {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/add-apt-repository -y "$@"
}

## mysql alias flags ##
function mysql {
    export MYSQL_PWD=$DB_PASSWORD_ROOT
    command mysql --user=root --database="$DB_NAME" --host="$DB_HOST" --protocol=tcp --port=3306 --force "$@"
}

## wget alias flags ##
function wget {
    command wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 "$@"
}

## cp alias flags ##
function cp {
    command cp -R -f -d --no-preserve=mode,ownership "$@"
}

## rsync alias flags ##
function rsync {
    command rsync -aI --ignore-errors "$@"
}

## unzip alias flags ##
function unzip {
    command unzip -o "$@"
}

## rm alias flags ##
function rm {
    command rm -R -f "$@"
}

## mkdir alias flags ##
function mkdir {
    command mkdir -p "$@"
}

## ln alias flags ##
function ln {
    command ln -s -f "$@"
}

####################################################################################################
#### SS-Purge: PROCEED MESSAGE #####################################################################
####################################################################################################

## MESSAGE ##
echo -e "\e[36mPurging all caches (PHP OPcache, WP transients, Redis object cache, and FastCGI (Nginx) cache...\e[0m" >&2

####################################################################################################
#### SS-Purge: Reset PHP OPcache (Bash Script Workaround) ##########################################
####################################################################################################

## manually delete OPcache file cache ##
# rm /var/www/cache/opcache/*

## creative way to reset OPcache using temporary PHP script ##
RANDOM_RESET_OPCACHE=$(openssl rand -hex 12)
echo "<?php opcache_reset(); ?>" > /var/www/html/purge-${RANDOM_RESET_OPCACHE}.php
/usr/bin/php /var/www/html/purge-${RANDOM_RESET_OPCACHE}.php
rm /var/www/html/purge-${RANDOM_RESET_OPCACHE}.php

## manually delete OPcache file cache (again) ##
# rm /var/www/cache/opcache/*

####################################################################################################
#### SS-Purge: Delete Transients From MySQL Database (WordPress Queries Cache) #####################
####################################################################################################

## prepare MySQL root password (suppresses MySQL security warnings) ##
export MYSQL_PWD=$DB_PASSWORD_ROOT

## manually delete all WP transients from database ##
mysql --execute="DELETE FROM ${DB_PREFIX}options WHERE option_name LIKE ('%\_transient\_%');"

####################################################################################################
#### SS-Purge: Flush Redis (Object Cache i.e. Transients) ##########################################
####################################################################################################

## when a persistent object cache is installed in WordPress it retains all WP transients ##
## therefore flushing Redis is similar to manually deleting WP transients in MySQL ##

## flush Redis object cache using redis-cli (and suppress messages) ##
redis-cli flushall &> /dev/null

####################################################################################################
### SS-Purge: Clear Nginx FastCGI Cache (Deletes All Cache Files On Disk / TMPFS) ##################
####################################################################################################

## here we manually delete all FastCGI cache files without touching OPcache file cache ##
## when running TMPFS this script clears the FastCGI cache files from RAM memory ##

find /var/www/cache/ -not -path "*/opcache*" -type f -delete

####################################################################################################
#### SimpleStack: External References Used To Improve This Script (Thanks, Interwebz) ##############
####################################################################################################

## Ref: https://www.php.net/manual/en/function.opcache-reset.php#121513
## Ref: https://stackoverflow.com/questions/5506913/bash-script-to-run-php-script
## Ref: https://coderwall.com/p/yrqrkw/delete-all-existing-wordpress-transients-in-mysql-database
## Ref: https://stackoverflow.com/questions/10422574/can-i-remove-transients-in-the-wp-options-table-of-my-wordpress-install
## Ref: https://wordpress.stackexchange.com/questions/73477/is-there-any-danger-in-deleting-all-transients
## Ref: https://stackoverflow.com/questions/20033648/how-to-run-mysql-command-on-bash
## Ref: https://serverfault.com/questions/337818/how-to-force-mysql-to-connect-by-tcp-instead-of-a-unix-socket
## Ref: https://stackoverflow.com/questions/33067909/bash-variable-under-a-mysql-query
## Ref: https://dev.mysql.com/doc/refman/5.7/en/examples.html
## Ref: https://stackoverflow.com/questions/25044817/zend-opcache-opcache-enable-cli-1-or-0-what-does-it-do#comment91052089_35880017
## Ref: https://codex.wordpress.org/Class_Reference/WP_Object_Cache
## Ref: https://pressidium.com/blog/2017/wordpress-object-caching-redis-memcached-and-native-apis/
## Ref: https://pressjitsu.com/blog/transient-cache-alternatives/
## Ref: https://unix.stackexchange.com/questions/87258/delete-all-files-except-in-a-certain-subdirectory-with-find

## SS_EOF