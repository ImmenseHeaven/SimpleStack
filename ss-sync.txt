#!/bin/bash

####################################################################################################
#### author: SimpleStack ###########################################################################
#### link: https://localhostdomain #################################################################
#### mirror: https://simplestack.git.supercluster.io/ss-sync.txt ###################################
#### path: /var/www/ss-sync ########################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Syncs relevant files and database from production site to the staging site ###########
#### module version: Ubuntu 20.04 LTS + MySQL 8.0.x + WordPress 5.4.x ##############################
####################################################################################################

## include SimpleStack configuration ##
source /var/www/ss-config

####################################################################################################
#### SimpleStack: Critical Bash Functions (Aliases) For This Script To Work ########################
####################################################################################################

## apt alias flags ##
function apt {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/apt -q -y -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-confdef "$@"
}

## add-apt-repository alias flags ##
function add-apt-repository {
    export DEBIAN_FRONTEND=noninteractive
    export DEBIAN_PRIORITY=critical
    export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    command /usr/bin/add-apt-repository -y "$@"
}

## wget alias flags ##
function wget {
    command wget --no-check-certificate --no-cache --no-cookies --tries=3 --timeout=15 "$@"
}

## cp alias flags ##
function cp {
    command cp -R -f -d --no-preserve=mode,ownership "$@"
}

## rsync alias flags ##
function rsync {
    command rsync -aI "$@"
}

## unzip alias flags ##
function unzip {
    command unzip -o "$@"
}

## rm alias flags ##
function rm {
    command rm -R -f "$@"
}

## mkdir alias flags ##
function mkdir {
    command mkdir -p "$@"
}

## ln alias flags ##
function ln {
    command ln -s -f "$@"
}

####################################################################################################
#### SS-Sync: Copy All Relevant Files From Production To Staging ###################################
####################################################################################################

## here we copy over everything from wp-content to staging besides uploads (media files) ##
## ss-clean is run beforehand in order to remove various (large) junk type files ##

## run ss-clean ##
source /var/www/ss-clean

## copy web root files over (skips uploads) ##
rsync --exclude 'uploads' /var/www/html/wp-content/ /var/www/html/staging/wp-content

####################################################################################################
#### SS-Sync: Copy Database From Production To Staging (Changes Table Prefix) ######################
####################################################################################################

## ss-sync dumps the live SQL database immediately before duplicating to staging site ##
## the table prefix will be staging_ (hardcoded) and minor search/replace occurs ##

## cleanup ##
rm /var/www/meta/staging.sql*
rm /tmp/*.sql*

## run ss-dump ##
source /var/www/ss-dump

## change production SQL dump to staging_ prefix (shared database with hardcoded URIs) ##
cp /var/www/meta/wp.sql /tmp/staging.sql
sed -i "s#${DB_PREFIX}#staging_${DB_PREFIX}#g" /tmp/staging.sql
sed -i "s#staging/staging/staging/staging/staging/staging/staging/staging/staging/staging#staging#g" /tmp/staging.sql
sed -i "s#staging/staging/staging/staging/staging/staging/staging/staging/staging#staging#g" /tmp/staging.sql
sed -i "s#staging/staging/staging/staging/staging/staging/staging/staging#staging#g" /tmp/staging.sql
sed -i "s#staging/staging/staging/staging/staging/staging/staging#staging#g" /tmp/staging.sql
sed -i "s#staging/staging/staging/staging/staging/staging#staging#g" /tmp/staging.sql
sed -i "s#staging/staging/staging/staging/staging#staging#g" /tmp/staging.sql
sed -i "s#staging/staging/staging/staging/staging#g" /tmp/staging.sql
sed -i "s#staging/staging/staging#staging#g" /tmp/staging.sql
sed -i "s#staging/staging#staging#g" /tmp/staging.sql

## fix any harcoded path conflicts in physical theme files ##
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging/staging/staging/staging/staging/staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging/staging/staging/staging/staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging/staging/staging/staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging/staging/staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging/staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging/staging#staging#g" {} +
find /var/www/html/staging/wp-content/themes/ -type f -exec sed -i "s#staging/staging#staging#g" {} +

## fix Jetpack hacks ##
# https://i0.wp.com/example.com/wp-content/uploads/2019/02/something.jpg

## prepare MySQL root password (suppresses MySQL security warnings) ##
export MYSQL_PWD=$DB_PASSWORD_ROOT

## import database ##
mysql --user=root --host="$DB_HOST" --protocol=tcp --port=3306 --force "$DB_NAME" < /tmp/staging.sql

## fix home and siteurl fields (no mass search/replace to avoid potential conflicts) ##
mysql --user=root --host="$DB_HOST" --database="$DB_NAME" --protocol=tcp --port=3306 --execute="UPDATE staging_options SET option_value='https://$SITE_DOMAIN/staging' WHERE option_name = 'home';"
mysql --user=root --host="$DB_HOST" --database="$DB_NAME" --protocol=tcp --port=3306 --execute="UPDATE staging_options SET option_value='https://$SITE_DOMAIN/staging' WHERE option_name = 'siteurl';"

## cleanup ##
rm /var/www/meta/staging.sql*
rm /tmp/*.sql*

####################################################################################################
#### SS-Sync: Configure Staging Site WP-Config File (Same As SS-Install) ###########################
####################################################################################################

## delete tmp files ##
rm /tmp/wp-config*

## change dir ##
cd /var/www/html/staging

## retrieve latest wp-config boilerplate ##
wget -O /tmp/wp-config.txt https://simplestack.git.supercluster.io/wordpress/wp-config-staging.txt

###### WP Multisite settings ########

## set multisite subdomains ##
if [[ -z "$WP_MULTISITE_SUBDOMAINS" ]]; then 
    sed -i "s/@WP_MULTISITE_SUBDOMAINS/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_MULTISITE_SUBDOMAINS/${WP_MULTISITE_SUBDOMAINS}/g" /tmp/wp-config.txt
fi

## set multisite ##
if [[ -z "$WP_MULTISITE" ]]; then 
    sed -i "s/@WP_MULTISITE/false/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_MULTISITE/${WP_MULTISITE}/g" /tmp/wp-config.txt
fi

## multisite ##
if [[ "$WP_MULTISITE" == "true" ]]; then 
    sed -i "s/@WP_MULTISITE/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_MULTISITE/false/g" /tmp/wp-config.txt
fi


####### other WP Config settings ##########

## replace database placeholders ##
sed -i "s/@DB_NAME/${DB_NAME}/g" /tmp/wp-config.txt
sed -i "s/@DB_USER/${DB_USER}/g" /tmp/wp-config.txt
sed -i "s/@DB_PASSWORD/${DB_PASSWORD}/g" /tmp/wp-config.txt
sed -i "s/@DB_HOST/${DB_HOST}/g" /tmp/wp-config.txt
sed -i "s/@DB_CHARSET/${DB_CHARSET}/g" /tmp/wp-config.txt
sed -i "s/@DB_COLLATE/${DB_COLLATE}/g" /tmp/wp-config.txt
sed -i "s/@DB_PREFIX/staging_${DB_PREFIX}/g" /tmp/wp-config.txt

## disable object cache (staging) ##
sed -i "s/@OBJECT_CACHE/false/g" /tmp/wp-config.txt

## set language ##
if [[ -z "$WP_LANG" ]]; then 
    sed -i "s/@WP_LANG/en-US/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_LANG/${WP_LANG}/g" /tmp/wp-config.txt
fi

## replace domain placeholders ##
sed -i "s#@SITE_DOMAIN#${SITE_DOMAIN}#g" /tmp/wp-config.txt
sed -i "s/@SITE_TLD/${SITE_TLD}/g" /tmp/wp-config.txt

## replace SFTP Details placeholders ##
sed -i "s/@SFTP_USER/${SFTP_USER}/g" /tmp/wp-config.txt
sed -i "s/@SFTP_PASSWORD/${SFTP_PASSWORD}/g" /tmp/wp-config.txt
if [[ -z "$SSH_PORT" ]]; then 
    sed -i "s/@SSH_PORT/6969/g" /tmp/wp-config.txt
else 
    sed -i "s/@SSH_PORT/${SSH_PORT}/g" /tmp/wp-config.txt
fi

## replace CloudFlare placeholders ##
sed -i "s/@CLOUDFLARE_API_KEY/${CLOUDFLARE_API_KEY}/g" /tmp/wp-config.txt
sed -i "s/@CLOUDFLARE_API_EMAIL/${CLOUDFLARE_API_EMAIL}/g" /tmp/wp-config.txt

## CloudFlare DNS widget ##
if [[ -z "$CLOUDFLARE_WIDGET_DNS" ]]; then 
    sed -i "s/@CLOUDFLARE_WIDGET_DNS/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@CLOUDFLARE_WIDGET_DNS/${CLOUDFLARE_WIDGET_DNS}/g" /tmp/wp-config.txt
fi

## replace salt keys ##
sed -i "s/@AUTHKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@SECUREAUTHKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@LOGGEDINKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@NONCEKEY/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@AUTHSALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@SECUREAUTHSALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@LOGGEDINSALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt
sed -i "s/@NONCESALT/$(openssl rand -hex 48)/g" /tmp/wp-config.txt

## Replace Placeholders: Debug and Dev/staging server ##
sed -i "s/@WP_DEBUG/true/g" /tmp/wp-config.txt
sed -i "s/@WP_LOCAL_DEV/false/g" /tmp/wp-config.txt



## core auto updates ##
if [[ -z "$WP_AUTO_UPDATE_CORE" ]]; then 
    sed -i "s/@WP_AUTO_UPDATE_CORE/minor/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_AUTO_UPDATE_CORE/${WP_AUTO_UPDATE_CORE}/g" /tmp/wp-config.txt
fi

## autosave (drafts) ##
if [[ -z "$WP_AUTOSAVE_INTERVAL" ]]; then 
    sed -i "s/@WP_AUTOSAVE_INTERVAL/60/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_AUTOSAVE_INTERVAL/${WP_AUTOSAVE_INTERVAL}/g" /tmp/wp-config.txt
fi

## revisions ##
if [[ -z "$WP_POST_REVISIONS" ]]; then 
    sed -i "s/@WP_POST_REVISIONS/5/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_POST_REVISIONS/${WP_POST_REVISIONS}/g" /tmp/wp-config.txt
fi

## block external requests ##
if [[ -z "$WP_HTTP_BLOCK_EXTERNAL" ]]; then 
    sed -i "s/@WP_HTTP_BLOCK_EXTERNAL/false/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_HTTP_BLOCK_EXTERNAL/${WP_HTTP_BLOCK_EXTERNAL}/g" /tmp/wp-config.txt
fi

## allowed hosts ##
if [[ -z "$WP_ACCESSIBLE_HOSTS" ]]; then 
    sed -i "s/@WP_ACCESSIBLE_HOSTS/api.wordpress.org/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_ACCESSIBLE_HOSTS/${WP_ACCESSIBLE_HOSTS}/g" /tmp/wp-config.txt
fi

## file edits ##
sed -i "s/@WP_DISALLOW_FILE_EDIT/false/g" /tmp/wp-config.txt

## file mods ##
sed -i "s/@WP_DISALLOW_FILE_MODS/false/g" /tmp/wp-config.txt

## file uploads ##
if [[ -z "$WP_ALLOW_UNFILTERED_UPLOADS" ]]; then 
    sed -i "s/@WP_ALLOW_UNFILTERED_UPLOADS/true/g" /tmp/wp-config.txt
else 
    sed -i "s/@WP_ALLOW_UNFILTERED_UPLOADS/${WP_ALLOW_UNFILTERED_UPLOADS}/g" /tmp/wp-config.txt
fi

## rename files ##
mv /tmp/wp-config.txt /tmp/wp-config.php

## copy files to destinations ##
cp /tmp/wp-config.php /var/www/html/staging/wp-config.php

## delete tmp files ##
rm /tmp/wp-config*

## create directories if doesn't exist (will not overwrite) ##
mkdir /var/www/html/staging/wp-content/temp
mkdir /var/www/html/staging/wp-content/uploads
mkdir /var/www/html/staging/wp-content/upgrade

####################################################################################################
#### SimpleStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://community.centminmod.com/threads/wp-engine-type-production-staging-file-and-db-sync.19720/
## Ref: https://softwareengineering.stackexchange.com/questions/117945/staging-environment-vs-production-environment
## Ref: https://www.thegeekstuff.com/2011/01/rsync-exclude-files-and-folders/
## Ref: https://stackoverflow.com/questions/2466101/how-i-can-change-prefixes-in-all-tables-in-my-mysql-db
## Ref: https://stackoverflow.com/questions/55055130/mysql-copy-tables-with-specific-prefix-between-databases
## Ref: https://stackoverflow.com/questions/3280006/duplicating-a-mysql-table-indices-and-data
## Ref: https://tableplus.com/blog/2018/11/how-to-duplicate-a-table-in-mysql.html
## Ref: https://electrictoolbox.com/copy-table-mysql-create-table-like/
## Ref: https://guides.wp-bullet.com/advanced-wordpress-search-replace-database-with-linux-using-sed/
## Ref: https://stackoverflow.com/questions/1917021/mysqldump-table-names-prefix
## Ref: https://dba.stackexchange.com/questions/8869/restore-mysql-database-with-different-name
## Ref: https://linuxize.com/post/how-to-back-up-and-restore-mysql-databases-with-mysqldump/
## Ref: https://stackoverflow.com/questions/12677037/how-to-import-a-mysql-dump-from-command-line-with-overwrite
## Ref: https://dba.stackexchange.com/questions/35847/mysqldump-flush-privileges-option
## Ref: https://stackoverflow.com/questions/11263018/mysql-ignore-errors-when-importing
## Ref: https://askubuntu.com/questions/76808/how-do-i-use-variables-in-a-sed-command
## Ref: https://stackoverflow.com/questions/54460445/sed-permission-denied-on-temporary-file
## Ref: https://www.unix.com/shell-programming-and-scripting/31583-wildcards-sed.html
## Ref: https://stackoverflow.com/questions/9189120/using-sed-with-wildcard
## Ref: http://helpdoco.com/Linux-Unix/sed-cannot-rename-permission-denied.htm
## Ref: https://precisionsec.com/changing-the-wordpress-site-url-using-the-mysql-command-line/
## Ref: https://stackoverflow.com/questions/20033648/how-to-run-mysql-command-on-bash
## Ref: https://polevaultweb.com/2014/03/5-ways-synchronise-wordpress-uploads-across-environments/
## Ref: https://blog.room34.com/archives/5091/wheres-the-option-to-change-the-uploads-path-in-wordpress-3-5/
## Ref: https://premium.wpmudev.org/blog/sync-staging-live-sites-wordpress/
## Ref: https://poststatus.com/functions-constants-referencing-wordpress-content-uploads-plugin-directories/
## Ref: https://phoenixnap.com/kb/rsync-exclude-files-and-directories
## Ref: http://qdosmsq.dunbar-it.co.uk/blog/2013/02/rsync-to-slash-or-not-to-slash/
## Ref: http://lucasb.eyer.be/snips/rsync-skipping-directory.html
## Ref: https://stackoverflow.com/questions/1583219/how-to-do-a-recursive-find-replace-of-a-string-with-awk-or-sed

## SS_EOF